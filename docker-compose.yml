version: "3.4"

services:
  ###> doctrine/doctrine-bundle ###
  database:
    build:
      context: .
      target: app_database
      args:
        POSTGRES_VERSION: ${POSTGRES_VERSION:-15}
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_CHARSET: ${POSTGRES_CHARSET:-utf8}
    volumes:
      - database-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: pg_isready -d db_prod
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
  ###< doctrine/doctrine-bundle ###

  rabbitmq:
    image: rabbitmq:management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-app}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-!ChangeMe!}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  php:
    build:
      context: .
      target: app_php
      args:
        SYMFONY_VERSION: ${SYMFONY_VERSION:-}
        STABILITY: ${STABILITY:-stable}
    depends_on:
      - rabbitmq
      - redis
      - database
    volumes:
      - php-socket:/var/run/php
      - uploads:/srv/app/public/uploads
    restart: unless-stopped
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-14}&charset=${POSTGRES_CHARSET:-utf8}
      RABBITMQ_URL: amqp://${RABBITMQ_USER:-app}:${RABBITMQ_PASSWORD:-!ChangeMe!}@rabbitmq:5672
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_URL: redis://${REDIS_HOST:-redis}:${REDIS_PORT:-6379}
      MAILER_DSN: smtp://mailer:1025
      
  caddy:
    build:
      context: .
      target: app_caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
    volumes:
      - php-socket:/var/run/php
      - caddy-data:/data
      - caddy-config:/config
      - uploads:/srv/app/public/uploads
    restart: unless-stopped
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  # Use mailcatcher in prod because this project is not supposed to be actually deployed
  mailer:
    image: schickling/mailcatcher
    ports:
      - 1025:1025
      - 1080:1080

volumes:
  rabbitmq-data:
  rabbitmq-log:
  redis-data:
  php-socket:
  php-public:
  caddy-data:
  caddy-config:
  uploads:

  ###> doctrine/doctrine-bundle ###
  database-data: ###< doctrine/doctrine-bundle ###
